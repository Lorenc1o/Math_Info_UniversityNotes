#!/bin/bash

SCRIPT_COMMAND="$0"
set -o nounset
set -o pipefail
set -o errexit
trap 'echo "$SCRIPT_COMMAND: error $? at line $LINENO"' ERR

BINARY="${1:-./heat}"
OUT_PREFIX="${OUT_PREFIX:-times/$(basename "$BINARY")}"
REPEAT_TIMES=5
TESTS=$(for i in tests/*.in ; do echo "$i" | sed -e 's|^tests/||' -e 's|.in$||' ; done)

THREADS_MAX="${THREADS_MAX:-$(grep -E processor.: /proc/cpuinfo | wc -l)}"
THREADS_TESTS="${THREADS_TESTS:-$(seq -s ' ' 1 $THREADS_MAX)}"

printf "Midiendo tiempos para «$BINARY» (hilos: $THREADS_TESTS)\n"

for t in ${TESTS} ; do
    TMP_OUT="$(mktemp)"
    TMP_ERR="$(mktemp)"
    TIMES_OUT="${OUT_PREFIX}.${t}.times.tsv"
    printf "\nGenerando «$TIMES_OUT»\n"
    printf "" > "$TIMES_OUT"
    for p in ${THREADS_TESTS} ; do 
        printf "Midiendo test «$t» con $p hilos:\n"
        export OMP_NUM_THREADS=$p
        if "${BINARY}" $(cat "tests/${t}.in") --print-result=false --print-iterations=false --print-difference=false --print-each-time=true --print-average-time=true --repeat-times=5 2> "$TMP_ERR" | tee "$TMP_OUT" ; then
            TIME="$(grep "^Average time" "$TMP_OUT" | cut -d: -f 2 | tr -d ' ')"
            printf "${p}\t${TIME}\n" >> "$TIMES_OUT"
            rm -f "$TMP_OUT"
            rm -f "$TMP_ERR"
        else 
            printf "ERROR (valor devuelto %d, stdout %s, stderr %s)\n" $? "$TMP_OUT" "$TMP_ERR"
        fi
    done
done
